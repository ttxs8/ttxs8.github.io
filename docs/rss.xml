<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>天天向上</title><link>http://blog.itzhm.com</link><description>每天进步一点点</description><copyright>天天向上</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://cdn.jsdelivr.net/gh/ttxs8/ttxs8.github.io/logo.jpg</url><title>avatar</title><link>http://blog.itzhm.com</link></image><lastBuildDate>Sat, 13 Apr 2024 07:50:53 +0000</lastBuildDate><managingEditor>天天向上</managingEditor><ttl>60</ttl><webMaster>天天向上</webMaster><item><title>两行代码 搞定计数</title><link>http://blog.itzhm.com/post/5.html</link><description>```&#13;
&lt;script async src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"&gt;&lt;/script&gt;&#13;
&lt;span id="busuanzi_container_site_pv"&gt;本站总访问量&lt;span id="busuanzi_value_site_pv"&gt;&lt;/span&gt;次&lt;/span&gt;&#13;
```&#13;
        &#13;
。</description><guid isPermaLink="true">http://blog.itzhm.com/post/5.html</guid><pubDate>Sat, 13 Apr 2024 05:42:46 +0000</pubDate></item><item><title>强烈推荐:18秒搭建一个属于你自己的博客！</title><link>http://blog.itzhm.com/post/1.html</link><description>今天在Github上找到一款非常好玩又轻量的博客框架！[Gmeek](https://github.com/Meekdai/Gmeek)它是一个博客框架，超轻量级个人博客模板，完全基于Github Pages 、 Github Issues 和 Github Actions，可以称作All in Github。</description><guid isPermaLink="true">http://blog.itzhm.com/post/1.html</guid><pubDate>Sat, 13 Apr 2024 00:51:43 +0000</pubDate></item><item><title>解决httpd占用80端口导致Nginx启动不成功报</title><link>http://blog.itzhm.com/post/4.html</link><description>## 解决httpd占用80端口导致Nginx启动不成功报nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)&#13;
&#13;
## 一、问题描述&#13;
&#13;
​    今天在建自己小网站时[启动Nginx](https://so.csdn.net/so/search?q=%E5%90%AF%E5%8A%A8Nginx&amp;spm=1001.2101.3001.7020)时，发现其报下列错误，意思是因为[80端口被占用](https://so.csdn.net/so/search?q=80%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8&amp;spm=1001.2101.3001.7020)导致Nginx启动失败。</description><guid isPermaLink="true">http://blog.itzhm.com/post/4.html</guid><pubDate>Mon, 22 Jan 2024 00:51:43 +0000</pubDate></item><item><title> 巴法云python接入，TCP协议，MQTT协议</title><link>http://blog.itzhm.com/post/2.html</link><description># 巴法云python接入，TCP协议，MQTT协议&#13;
&#13;
## **第一，tcp协议连接**&#13;
&#13;
说明： tcp服务器地址：[http://bemfa.com](https://link.zhihu.com/?target=http%3A//bemfa.com) 端口 8344&#13;
&#13;
tcp协议详细订阅、发布指令，见接入文档：[点击跳转](https://link.zhihu.com/?target=https%3A//cloud.bemfa.com/docs/%23/%3Fid%3D_41-tcp%25e5%2588%259b%25e5%25ae%25a2%25e4%25ba%2591)&#13;
&#13;
```python&#13;
# -*- coding: utf-8&#13;
import socket&#13;
import threading&#13;
&#13;
def connTCP():&#13;
    global tcp_client_socket&#13;
    # 创建socket&#13;
    tcp_client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&#13;
    # IP 和端口&#13;
    server_ip = 'bemfa.com'&#13;
    server_port = 8344&#13;
    try:&#13;
        # 连接服务器&#13;
        tcp_client_socket.connect((server_ip, server_port))&#13;
        #发送订阅指令&#13;
        substr = 'cmd=1&amp;uid=4d9ec352e0376f2110a0c601a2857225&amp;topic=led002\r\n'&#13;
        tcp_client_socket.send(substr.encode("utf-8"))&#13;
    except:&#13;
        time.sleep(2)&#13;
        connTCP()&#13;
&#13;
#心跳&#13;
def Ping():&#13;
    # 发送心跳&#13;
    try:&#13;
        keeplive = 'ping\r\n'&#13;
        tcp_client_socket.send(keeplive.encode("utf-8"))&#13;
    except:&#13;
        time.sleep(2)&#13;
        connTCP()&#13;
    #开启定时，30秒发送一次心跳&#13;
    t = threading.Timer(30,Ping)&#13;
    t.start()&#13;
&#13;
&#13;
connTCP()&#13;
Ping()&#13;
&#13;
while True:&#13;
    # 接收服务器发送过来的数据&#13;
    recvData = tcp_client_socket.recv(1024)&#13;
    if len(recvData) != 0:&#13;
        print('recv:', recvData.decode('utf-8'))&#13;
    else:&#13;
        print("conn err")&#13;
        connTCP()&#13;
```&#13;
&#13;
## 第二，MQTT 协议连接&#13;
&#13;
说明： mqtt服务器地址：[http://bemfa.com](https://link.zhihu.com/?target=http%3A//bemfa.com) 端口：9501&#13;
&#13;
连接服务器&#13;
&#13;
1.用户私钥作为连接MQTT服务器的客户端ID&#13;
&#13;
2.连接时用户名和密码为空，或随意填写，即设备连接时不需要账号和密码&#13;
&#13;
mqtt程序使用前需安装mqtt库文件，安装命令：&#13;
&#13;
```text&#13;
pip3 install paho-mqtt&#13;
```&#13;
&#13;
程序：&#13;
&#13;
```python&#13;
# -*- coding: utf-8 -*-&#13;
# 以下代码在2021年10月21日 python3.10环境下运行通过&#13;
&#13;
import paho.mqtt.client as mqtt&#13;
&#13;
HOST = "bemfa.com"&#13;
PORT = 9501&#13;
client_id = "4d9ec352e0376f2110a0c601a2857225"                       &#13;
#连接并订阅&#13;
def on_connect(client, userdata, flags, rc):&#13;
    print("Connected with result code "+str(rc))&#13;
    client.subscribe("led00202")         # 订阅消息&#13;
&#13;
#消息接收&#13;
def on_message(client, userdata, msg):&#13;
    print("主题:"+msg.topic+" 消息:"+str(msg.payload.decode('utf-8')))&#13;
&#13;
#订阅成功&#13;
def on_subscribe(client, userdata, mid, granted_qos):&#13;
    print("On Subscribed: qos = %d" % granted_qos)&#13;
&#13;
# 失去连接&#13;
def on_disconnect(client, userdata, rc):&#13;
    if rc != 0:&#13;
        print("Unexpected disconnection %s" % rc)&#13;
&#13;
&#13;
client = mqtt.Client(client_id)&#13;
client.username_pw_set("userName", "passwd")&#13;
client.on_connect = on_connect&#13;
client.on_message = on_message&#13;
client.on_subscribe = on_subscribe&#13;
client.on_disconnect = on_disconnect&#13;
client.connect(HOST, PORT, 60)&#13;
client.loop_forever()&#13;
```&#13;
&#13;
&#13;
&#13;
run.vbs&#13;
&#13;
```vbscript&#13;
Set ws = CreateObject("Wscript.Shell")&#13;
ws.run "cmd /c C:\Windows\shutdown\run.bat",0&#13;
```&#13;
&#13;
run.bat&#13;
&#13;
```bash&#13;
python -u C:\Windows\shutdown\sd.py &gt; log.out&#13;
```&#13;
&#13;
&lt;!-- ##{"timestamp":1705107103}## --&gt;。</description><guid isPermaLink="true">http://blog.itzhm.com/post/2.html</guid><pubDate>Sat, 13 Jan 2024 00:51:43 +0000</pubDate></item><item><title>ESXI 系统密码登录失败登录不上</title><link>http://blog.itzhm.com/post/8.html</link><description> ESXI 系统密码登录失败登录不上&#13;
&#13;
自从esxi版本升级到6.5+ 以后,经常遇到"用户名或密码不正确,无法完成登录的报错"。</description><guid isPermaLink="true">http://blog.itzhm.com/post/8.html</guid><pubDate>Mon, 15 May 2023 07:41:33 +0000</pubDate></item><item><title>微力同步部署</title><link>http://blog.itzhm.com/post/3.html</link><description>&gt;  能 P2P 技术加速同步，会将文件分割成若干份仅 KB 的数据同步，而文件都会进行 AES 加密处理。</description><guid isPermaLink="true">http://blog.itzhm.com/post/3.html</guid><pubDate>Sat, 13 May 2023 00:51:43 +0000</pubDate></item><item><title>关于</title><link>http://blog.itzhm.com/about.html</link><description>Hello Word！。</description><guid isPermaLink="true">http://blog.itzhm.com/about.html</guid><pubDate>Sat, 13 Apr 2024 06:40:46 +0000</pubDate></item><item><title>收藏链接</title><link>http://blog.itzhm.com/link.html</link><description>**这里是我收藏的一些链接：**&#13;
&#13;
- [Gmeek](https://github.com/Meekdai/Gmeek) 一个博客框架，超轻量级个人博客模板，完全基于Github Pages 、 Github Issues 和 Github Actions，可以称作All in Github。</description><guid isPermaLink="true">http://blog.itzhm.com/link.html</guid><pubDate>Sat, 13 Apr 2024 07:04:27 +0000</pubDate></item></channel></rss>